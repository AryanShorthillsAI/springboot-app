name: Deploy Spring Boot to EC2

on:
  workflow_run:
    workflows: ["Install packages to EC2"]
    types:
      - completed

  # push:
  #   branches:
  #     - deploy-to-ec2

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Project with Maven
        run: |
          mvn clean package -DskipTests
          
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-app
          path: target

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "target/*.jar"
          target: "/home/ubuntu/app"

      - name: Deploy and Run on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Stop any running Spring Boot application
            sudo pkill -9 -f 'java -jar' || echo "No existing process found"
            echo "ðŸ”´ Stopped any existing Spring Boot application"

            # Ensure deployment directory exists
            cd /home/ubuntu/app

            # Set execute permission for JAR
            chmod +x *.jar

            # Run the application in background (change to port 8080 if needed)
            nohup sudo java -jar *.jar --server.port=80 > app.log 2>&1 &

            echo "âœ… Spring Boot application deployed successfully!"
